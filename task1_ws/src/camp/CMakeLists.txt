cmake_minimum_required(VERSION 3.8)
project(camp)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# Find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(rclpy REQUIRED)
find_package(tf2_ros REQUIRED)
find_package(tf2_geometry_msgs REQUIRED)
find_package(std_msgs REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(sensor_msgs REQUIRED)
find_package(urdf REQUIRED)
find_package(robot_state_publisher REQUIRED)
find_package(xacro REQUIRED)

# Install launch files
install(DIRECTORY
  launch
  DESTINATION share/${PROJECT_NAME}/
)

# Install config files
install(DIRECTORY
  config
  DESTINATION share/${PROJECT_NAME}/
)

# Install scripts
install(PROGRAMS
  scripts/simple_joint_state_publisher.py
  DESTINATION lib/${PROJECT_NAME}
)

# Install models
install(DIRECTORY
  models
  DESTINATION share/${PROJECT_NAME}/
)

# Install worlds
install(DIRECTORY
  worlds
  DESTINATION share/${PROJECT_NAME}/
)

# Install package.xml
install(FILES
  package.xml
  DESTINATION share/${PROJECT_NAME}
)

install(
  PROGRAMS
    scripts/simple_joint_state_publisher.py
  DESTINATION lib/${PROJECT_NAME}

)

install(
  PROGRAMS
    scripts/aruco_navigation.py
  DESTINATION lib/${PROJECT_NAME}

)

install(PROGRAMS
  scripts/dynamic_carrot_broadcaster.py
  DESTINATION lib/${PROJECT_NAME}
)

install(DIRECTORY launch
  DESTINATION share/${PROJECT_NAME}
)



# ... (existing CMakeLists.txt content for C++ components) ...


# Install Python scripts
install(PROGRAMS
  scripts/waypoint_navigator.py
  DESTINATION lib/${PROJECT_NAME}
)

# Create environment hook for Gazebo resource paths
ament_environment_hooks(
  ${CMAKE_CURRENT_SOURCE_DIR}/env-hooks/camp.dsv.in
)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
